<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vsm ="clr-namespace:System.Windows;assembly=PresentationFramework"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:Custom="http://schemas.AvalonControls/AvalonControlsLibrary/Controls" xmlns:Themes1="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
                    xmlns:classes="clr-namespace:WaveFit.Classes">


    <!--CORES-->
    <!--GERAL-->
    <SolidColorBrush x:Key="MainWindowBackgroundBrush" Color="White"/>
    <SolidColorBrush x:Key="BackgroundBrush" Color="White"/>
    <SolidColorBrush x:Key="InsideBorderBackgroundBrush" Color="#FF89BF9F"/>
    <SolidColorBrush x:Key="LightColorBrush" Color="#FFD3E7DB"/>
    <SolidColorBrush x:Key="BorderBrush" Color="Black"/>
    <SolidColorBrush x:Key="IconForeground" Color="White"/>
    <Color x:Key="MainColor" A="#FF" R="#89" G="#BF" B="#9F"/>

    <!--DATAGRID-->
    <SolidColorBrush x:Key="DataGridHeaderBrush" Color="#FF89BF9F"/>
    <SolidColorBrush x:Key="DataGridHeaderForegroundBrush" Color="White"/>
    <SolidColorBrush x:Key="DataGridHeaderBorderBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="DataGridAlternateRowBrush" Color="#2089BF9F"/>
    <SolidColorBrush x:Key="DataGridBackgroundBrush" Color="White"/>
    <SolidColorBrush x:Key="SortArrowBrush" Color="White"/>

    <!--SCROLL-->
    <SolidColorBrush x:Key="ScrollTrackerBrush" Color="#FFCCCCCC"/>

    <!--AUDIOGRAMA-->
    <!--MARCADORES-->
    <SolidColorBrush x:Key="RedMarkerBrush" Color="#FF990000"/>
    <SolidColorBrush x:Key="BlueMarkerBrush" Color="#FF003399"/>

    <!--GRÁFICO-->
    <SolidColorBrush x:Key="RedAudiogramBrush" Color="#FFFAE8EA"/>
    <SolidColorBrush x:Key="BlueAudiogramBrush" Color="#FFE5E5FF"/>


    <!--TAMANHOS-->
    <GridLength x:Key="HeaderGridHeight">40</GridLength>
    <Thickness  x:Key="ControlBorderThickness" Left="2" Top="2" Right="2" Bottom="2"/>

    <!--FONTES-->
    <SolidColorBrush x:Key="TextBrush" Color="Black"/>

    <System:Double x:Key="FontSize">12</System:Double>
    <FontFamily x:Key="FontFamily">Calibri</FontFamily>
    <FontWeight x:Key="FontWeight">Normal</FontWeight>

    <System:Double x:Key="HeaderFontSize">18</System:Double>
    <FontFamily x:Key="HeaderFontFamily">Calibri</FontFamily>
    <FontWeight x:Key="HeaderFontWeight">Normal</FontWeight>

    <System:Double x:Key="TabHeaderFontSize">12</System:Double>
    <FontFamily x:Key="TabHeaderFontFamily">Calibri</FontFamily>
    <FontWeight x:Key="TabHeaderFontWeight">Normal</FontWeight>

    <!--EFEITOS-->
    <!--MOUSE-->
    <Cursor x:Key="MouseOverCursor">Hand</Cursor>
    <SolidColorBrush x:Key="MouseOverBackgroundBrush" Color="#FFD3E7DB"/>
    <SolidColorBrush x:Key="MouseOverForegroundBrush" Color="White"/>

    <!--SElEÇÃO-->
    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#AA89bf9f" />
    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrush}" Color="#FFFFFFFF" />
    <!--<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#4089bf9f" />-->
    <SolidColorBrush x:Key="ButtonPressedBrush" Color="#FFD3E7DB"/>

    <!--FOCO-->
    <SolidColorBrush x:Key="FocusedBorderBrush" Color="#FF909090"/>

    <!--DISABLED-->
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#FFDDDDDD"/>
    <Color x:Key="DisabledBackgroundColor" A="#FF" R="#F0" G="#F0" B="#F0"/>
    <SolidColorBrush x:Key="TabItemBrush" Color="#FFE2E2E2"/>
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#FF202020"/>

    <!--OUTROS-->
    <SolidColorBrush x:Key="ExpanderFillBrush" Color="White"/>
    <SolidColorBrush x:Key="HardwareMessageBoxBorderBrush" Color="#FF0F0E0E"/>
    <SolidColorBrush x:Key="ForegoundTextBrush" Color="White"/>
    <SolidColorBrush x:Key="FormTextBoxBrush" Color="Gainsboro"/>

    <!--LOGOS-->
    <!--WAVETECHLOGO-->
    <Style x:Key="WaveTechLogo" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Width="2529" Height="1293.5298">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="-6528.0001" Y="-11453.47"/>
                                </Canvas.RenderTransform>
                                <Path Fill="#FF373435">
                                    <Path.Data>
                                        <PathGeometry Figures="m 6528 11732 c 21 -21 42 -45 69 -58 34 -15 71 -20 107 -10 182 50 223 376 431 346 66 -9 115 -67 152 -118 54 -78 95 -164 144 -244 45 -74 95 -155 181 -185 92 -31 178 18 240 84 37 40 66 86 96 131 56 84 111 170 173 250 83 107 215 188 345 101 105 -71 176 -179 271 -260 46 -39 98 -77 159 -87 6 -1 12 0 18 -1 6 0 13 0 19 1 11 1 23 4 34 9 10 4 21 10 30 16 10 7 20 14 29 22 10 8 19 17 28 25 1 1 2 2 3 3 -5 -3 -10 -6 -15 -8 -7 -3 -14 -5 -21 -6 -47 -10 -120 7 -192 113 -65 94 -115 198 -173 296 -42 71 -82 146 -147 198 -147 118 -287 -77 -363 -185 -57 -82 -127 -179 -227 -211 -100 -32 -189 30 -261 95 -111 100 -207 296 -384 279 -110 -10 -207 -106 -271 -190 -83 -108 -142 -233 -231 -337 -32 -37 -72 -68 -122 -78 -42 -9 -82 -8 -122 9 z" FillRule="nonzero"/>
                                    </Path.Data>
                                </Path>
                                <Canvas>
                                    <Path Fill="#FF373435">
                                        <Path.Data>
                                            <PathGeometry Figures="m 7219 12629 c 0 31 15 57 45 76 13 7 27 11 43 11 32 0 57 -15 76 -45 7 -13 11 -28 11 -43 0 -32 -15 -57 -45 -76 -13 -8 -28 -11 -43 -11 -32 0 -57 15 -76 45 -7 13 -11 27 -11 43 z m 83 -118 9 0 c 29 0 57 13 83 39 l 0 -38 1 -1 27 0 1 1 0 232 -1 1 -27 0 -1 -1 0 -37 c -26 25 -54 38 -83 38 l -9 0 c -33 0 -62 -15 -88 -44 -17 -23 -25 -46 -25 -69 l 0 -8 c 0 -33 15 -62 45 -88 23 -17 46 -25 68 -25 z" FillRule="nonzero"/>
                                        </Path.Data>
                                    </Path>
                                    <Path Fill="#FF373435">
                                        <Path.Data>
                                            <PathGeometry Figures="m 7496 12508 c 2 1 30 58 86 170 l 1 0 c 56 -113 84 -170 86 -170 l 32 0 0 1 c -77 158 -116 236 -119 236 l -118 -236 1 -1 31 0 z" FillRule="nonzero"/>
                                        </Path.Data>
                                    </Path>
                                    <Path Fill="#FF373435">
                                        <Path.Data>
                                            <PathGeometry Figures="m 7746 12596 165 0 c -4 -16 -14 -29 -29 -41 -16 -12 -34 -18 -54 -18 -36 0 -63 18 -81 55 l -1 4 z m 79 -89 4 0 c 46 0 82 22 107 67 8 17 11 33 11 47 l 0 3 -1 2 -206 0 0 1 c 0 38 20 66 61 83 8 3 16 4 23 4 l 9 0 c 28 0 53 -15 74 -44 l 30 0 2 1 c -9 22 -22 38 -38 49 -21 17 -45 25 -73 25 -43 0 -77 -20 -104 -61 -9 -19 -14 -37 -14 -53 l 0 -12 c 0 -30 14 -59 43 -85 23 -18 47 -27 72 -27 z" FillRule="nonzero"/>
                                        </Path.Data>
                                    </Path>
                                    <Path Fill="#FF373435">
                                        <Path.Data>
                                            <PathGeometry Figures="m 8183 12598 164 0 c -5 -16 -15 -29 -29 -40 -17 -12 -34 -18 -54 -18 -35 0 -62 18 -80 54 l -1 4 z m 79 -88 3 0 c 46 0 81 22 106 66 7 17 11 33 11 47 l 0 3 -2 2 -202 0 0 1 c 0 37 20 65 59 82 9 2 17 3 24 3 l 8 0 c 28 0 52 -14 73 -43 l 30 0 2 1 c -10 21 -22 37 -38 48 -21 17 -45 25 -72 25 -42 0 -76 -20 -102 -60 -9 -19 -14 -37 -14 -53 l 0 -11 c 0 -30 14 -58 42 -84 23 -18 47 -27 72 -27 z" FillRule="nonzero"/>
                                        </Path.Data>
                                    </Path>
                                    <Path Fill="#FF373435">
                                        <Path.Data>
                                            <PathGeometry Figures="m 8535 12511 9 0 c 27 0 54 11 78 34 9 9 15 17 19 24 l -1 0 -35 0 c -19 -19 -41 -29 -66 -29 -31 0 -56 14 -74 42 -9 14 -13 29 -13 46 0 31 14 56 42 75 13 8 29 13 46 13 24 0 46 -10 65 -30 l 35 0 1 1 c -15 25 -36 42 -65 53 -13 3 -24 5 -32 5 l -9 0 c -27 0 -53 -11 -78 -33 -23 -25 -35 -51 -35 -80 l 0 -8 c 0 -27 11 -53 33 -78 25 -24 52 -35 80 -35 z" FillRule="nonzero"/>
                                        </Path.Data>
                                    </Path>
                                    <Path Fill="#FF373435">
                                        <Path.Data>
                                            <PathGeometry Figures="m 8693 12280 26 0 2 2 0 268 c 26 -25 52 -38 80 -38 l 13 0 c 36 0 67 19 93 55 11 20 17 38 17 55 l 0 121 -2 2 -25 0 -2 -2 0 -110 c 0 -43 -21 -73 -63 -87 -5 -2 -13 -4 -24 -4 -38 0 -65 19 -83 58 -3 10 -4 21 -4 33 l 0 110 -2 2 -26 0 -2 -2 0 -461 2 -2 z" FillRule="nonzero"/>
                                        </Path.Data>
                                    </Path>
                                    <Path Fill="#FF373435">
                                        <Path.Data>
                                            <PathGeometry Figures="m 6749 12396 c 2 1 75 145 138 273 l 2 0 c 43 -89 85 -174 88 -174 l 85 174 2 0 c 63 -129 136 -273 138 -273 l 36 0 c 0 2 -85 172 -174 349 l -1 0 c -1 0 -44 -84 -86 -172 -2 1 -44 84 -87 171 l -1 1 -2 0 -174 -348 1 -1 35 0 z" FillRule="nonzero"/>
                                        </Path.Data>
                                    </Path>
                                    <Polygon Points="8203,12419 8199,12422 8095,12422 8095,12744 8092,12747 8070,12747 8066,12744 8066,12422 7960,12422 7956,12419 7956,12398 7960,12394 8199,12394 8203,12398 " FillRule="nonzero" Fill="#FF373435"/>
                                </Canvas>
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--WAVEFITLOGO-->
    <Style x:Key="WaveFitLogo" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas  Width="20267.125" Height="3336.7097">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources>
                            </Canvas.Resources>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="10332" Y="7463"/>
                                </Canvas.RenderTransform>
                                <Path Fill="#FF373435">
                                    <Path.Data>
                                        <PathGeometry Figures="m -5574 -5275 c 0 299 140 537 420 713 122 69 258 104 405 104 299 0 537 -140 713 -420 69 -123 104 -258 104 -406 0 -299 -140 -537 -420 -713 -123 -69 -258 -103 -406 -103 -299 0 -537 139 -713 420 -69 122 -103 258 -103 405 z m 781 -1104 80 0 c 280 0 540 120 781 361 l 0 -352 12 -9 257 0 10 9 0 2181 -10 10 -257 0 -12 -10 0 -352 c -241 241 -501 362 -781 362 l -80 0 c -309 0 -586 -140 -831 -421 -153 -215 -229 -428 -229 -639 l 0 -80 c 0 -309 140 -586 420 -831 216 -153 429 -229 640 -229 z" FillRule="nonzero"/>
                                    </Path.Data>
                                </Path>
                                <Path Fill="#FF373435">
                                    <Path.Data>
                                        <PathGeometry Figures="m -2967 -6405 c 13 6 282 538 807 1596 l 9 0 c 521 -1064 790 -1596 809 -1596 l 295 0 0 9 c -720 1478 -1091 2216 -1113 2216 l -1113 -2216 10 -9 296 0 z" FillRule="nonzero"/>
                                    </Path.Data>
                                </Path>
                                <Path Fill="#FF373435">
                                    <Path.Data>
                                        <PathGeometry Figures="m -621 -5584 1556 0 c -43 -147 -135 -274 -275 -381 -157 -113 -326 -170 -508 -170 -340 0 -594 171 -763 515 l -10 36 z m 747 -836 36 0 c 434 0 768 211 1003 632 71 158 107 307 107 445 l 0 27 -17 16 -1929 0 0 10 c 0 357 190 618 568 782 81 23 155 34 222 34 l 82 0 c 264 0 495 -139 691 -416 l 285 0 19 16 c -87 200 -206 351 -356 455 -200 160 -428 239 -685 239 -402 0 -728 -192 -976 -576 -90 -181 -134 -346 -134 -498 l 0 -108 c 0 -289 133 -555 399 -799 217 -173 446 -259 685 -259 z" FillRule="nonzero"/>
                                    </Path.Data>
                                </Path>
                                <Path Fill="#FF373435">
                                    <Path.Data>
                                        <PathGeometry Figures="m -9986 -7463 c 15 7 699 1366 1296 2567 l 11 0 c 405 -836 807 -1631 827 -1631 l 804 1631 22 0 c 590 -1209 1274 -2567 1296 -2567 l 335 0 c 0 21 -795 1619 -1631 3283 l -11 0 c -14 0 -412 -791 -815 -1620 -15 7 -413 796 -816 1610 l -11 10 -11 0 -1642 -3273 11 -10 335 0 z" FillRule="nonzero"/>
                                    </Path.Data>
                                </Path>
                                <Canvas>
                                    <Path Fill="#FF89BF9F">
                                        <Path.Data>
                                            <PathGeometry Figures="m 6917.9656 -7452.3218 -2687.6515 0 0 305.8708 361.0278 45.1285 0 2572.3232 -361.0278 45.1285 0 305.8708 1318.7544 0 0 -305.8708 -441.2563 -65.1856 0 -1027.9264 907.5839 0 65.1855 396.1277 310.8851 0 0 -1193.3975 -310.8851 0 -65.1855 396.1278 -907.5839 0 0 -1047.9836 1434.0828 0 70.1998 426.2134 305.8708 0 z" FillRule="evenodd"/>
                                        </Path.Data>
                                    </Path>
                                    <Path Fill="#FF89BF9F">
                                        <Path.Data>
                                            <PathGeometry Figures="m 7691.2979 -6920.8086 c 91.0918 -0.7285 162.1273 -23.0838 213.1066 -67.066 50.9775 -43.9765 76.8846 -105.1924 77.7213 -183.6477 -0.8367 -78.4495 -26.7438 -139.6655 -77.7213 -183.648 -50.9793 -43.9762 -122.0148 -66.3314 -213.1066 -67.0658 -93.287 0.7345 -164.9493 23.0898 -214.9871 67.0659 -50.0388 43.9825 -75.3191 105.1984 -75.8409 183.6479 0.5219 78.4553 25.8022 139.6712 75.841 183.6477 50.0377 43.9821 121.7 66.3374 214.987 67.066 z m 571.6274 2436.9378 -325.9279 -45.1285 0 -2035.7957 -817.3269 0 0 305.8708 325.9279 45.1284 0 1684.7965 -325.9279 45.1285 0 305.8708 1143.2548 0 z" FillRule="evenodd"/>
                                        </Path.Data>
                                    </Path>
                                    <Path Fill="#FF89BF9F">
                                        <Path.Data>
                                            <PathGeometry Figures="m 9864.9252 -4599.1991 c -90.2584 45.9645 -180.5153 69.3644 -270.7709 70.1998 -99.8687 0.4182 -173.4113 -25.4889 -220.6281 -77.7213 -47.2188 -52.2316 -70.6187 -133.2956 -70.1999 -243.1923 l 0 -1343.8258 496.4133 0 0 -371.0563 -496.4133 0 0 -666.8986 -386.0992 0 -80.2284 671.9128 -401.142 40.1142 0 325.9279 381.0849 0 0 1414.0257 c -1.2539 224.5981 48.8888 389.6511 150.4283 495.1597 101.5383 105.5087 261.9949 157.7407 481.3704 156.6961 93.2851 0.2088 181.2437 -8.984 263.8761 -27.5786 82.6297 -18.5947 156.7992 -47.8446 222.5086 -87.7498 z" FillRule="evenodd"/>
                                        </Path.Data>
                                    </Path>
                                </Canvas>
                                <Path StrokeThickness="50" Stroke="#FF000000" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                    <Path.Data>
                                        <PathGeometry Figures="m 2651 -4382 0 -2868" FillRule="evenodd"/>
                                    </Path.Data>
                                </Path>
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ICONS-->
    <!--MENUICONS-->
    <!--PATIENTICON-->
    <Style x:Key="PatientIcon" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Width="982.90373" Height="988.00001">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="-6707.9617" Y="-13239"/>
                                </Canvas.RenderTransform>
                                <Canvas>
                                    <Path StrokeThickness="50" Stroke="{DynamicResource IconForeground}">
                                        <Path.Data>
                                            <PathGeometry Figures="m 7478 13647 c 0 -181 -77 -383 -282 -383 -205 0 -279 210 -279 383 0 161 124 420 281 420 168 0 280 -274 280 -420 z" FillRule="evenodd"/>
                                        </Path.Data>
                                    </Path>
                                    <Path StrokeThickness="50" Stroke="{DynamicResource IconForeground}">
                                        <Path.Data>
                                            <PathGeometry Figures="m 7080 14018 c -123 18 -221 60 -319 115 -47 26 -31 69 19 69 280 0 565 0 846 0 32 0 59 -36 22 -64 -101 -59 -202 -94 -330 -121" FillRule="evenodd"/>
                                        </Path.Data>
                                    </Path>
                                </Canvas>
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--AUDIOGRAMICON-->
    <Style x:Key="AudiogramIcon" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Width="1075.5" Height="998.72018">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="-9003.0001" Y="-13231.545"/>
                                </Canvas.RenderTransform>
                                <Canvas>
                                    <Path StrokeThickness="50" Stroke="{DynamicResource IconForeground}" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                        <Path.Data>
                                            <PathGeometry Figures="m 9427 13673 c -123 -457 510 -571 616 -175 14 53 14 105 0 158 -18 66 -74 124 -111 187 -34 59 -43 140 -64 210 -53 199 -335 207 -335 0" FillRule="evenodd"/>
                                        </Path.Data>
                                    </Path>
                                    <Path StrokeThickness="50" Stroke="{DynamicResource IconForeground}" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                        <Path.Data>
                                            <PathGeometry Figures="m 9542 13589 c 10 -300 484 -224 348 102" FillRule="evenodd"/>
                                        </Path.Data>
                                    </Path>
                                    <Path StrokeThickness="50" Stroke="{DynamicResource IconForeground}" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                        <Path.Data>
                                            <PathGeometry Figures="m 9624 13654 c 91 -91 224 18 147 133 -25 29 -49 29 -77 76 -13 23 -18 50 -27 75 -15 55 -75 39 -91 -22 -8 -29 -2 -60 5 -88" FillRule="evenodd"/>
                                        </Path.Data>
                                    </Path>
                                    <Path StrokeThickness="50" Stroke="{DynamicResource IconForeground}" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                        <Path.Data>
                                            <PathGeometry Figures="m 9177 13953 c 126 -127 120 -323 0 -444" FillRule="evenodd"/>
                                        </Path.Data>
                                    </Path>
                                    <Path StrokeThickness="50" Stroke="{DynamicResource IconForeground}" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                        <Path.Data>
                                            <PathGeometry Figures="m 9103 13875 c 82 -82 78 -210 0 -288" FillRule="evenodd"/>
                                        </Path.Data>
                                    </Path>
                                    <Path StrokeThickness="50" Stroke="{DynamicResource IconForeground}" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                        <Path.Data>
                                            <PathGeometry Figures="m 9028 13806 c 42 -43 40 -109 0 -150" FillRule="evenodd"/>
                                        </Path.Data>
                                    </Path>
                                </Canvas>
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--HEARINGAIDICON-->
    <Style x:Key="HearingAidIcon" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Width="1009.6319" Height="1000">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="-11266" Y="-13234"/>
                                </Canvas.RenderTransform>
                                <Path StrokeThickness="50" Stroke="{DynamicResource IconForeground}">
                                    <Path.Data>
                                        <PathGeometry Figures="m 11578 14209 c 34 0 73 -14 73 -59 0 -239 21 -752 321 -752 89 0 170 60 190 135 7 25 97 -1 88 -26 -29 -109 -156 -248 -384 -248 -254 0 -575 205 -575 669 l 0 92 c 0 107 128 189 215 189 24 0 48 0 72 0 z" FillRule="evenodd"/>
                                    </Path.Data>
                                </Path>
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ADJUSTICON-->
    <Style x:Key="AdjustIcon" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Width="1104" Height="1107.752">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="-13401" Y="-13171.498"/>
                                </Canvas.RenderTransform>
                                <Canvas Name="_609987360">
                                    <Ellipse Canvas.Left="14202" Canvas.Top="13375" Width="278" Height="278" StrokeThickness="50" Stroke="{DynamicResource IconForeground}"/>
                                    <Path StrokeThickness="50" Stroke="{DynamicResource IconForeground}">
                                        <Path.Data>
                                            <PathGeometry Figures="m 14412 13395 c -45 -27 -96 -27 -142 0 l 0 -128 c 0 -94 142 -94 142 0 l 0 128 z" FillRule="evenodd"/>
                                        </Path.Data>
                                    </Path>
                                    <Path StrokeThickness="50" Stroke="{DynamicResource IconForeground}">
                                        <Path.Data>
                                            <PathGeometry Figures="m 14412 13633 c -45 26 -97 26 -142 0 l 0 550 c 0 93 142 96 142 0 l 0 -550 z" FillRule="evenodd"/>
                                        </Path.Data>
                                    </Path>
                                    <Ellipse Canvas.Left="13812" Canvas.Top="13798" Width="278" Height="278" StrokeThickness="50" Stroke="{DynamicResource IconForeground}"/>
                                    <Path StrokeThickness="50" Stroke="{DynamicResource IconForeground}">
                                        <Path.Data>
                                            <PathGeometry Figures="m 14022 14056 c -45 26 -96 27 -142 0 l 0 127 c 0 95 142 95 142 0 l 0 -127 z" FillRule="evenodd"/>
                                        </Path.Data>
                                    </Path>
                                    <Path StrokeThickness="50" Stroke="{DynamicResource IconForeground}">
                                        <Path.Data>
                                            <PathGeometry Figures="m 14022 13818 c -45 -26 -97 -26 -142 0 l 0 -551 c 0 -93 142 -95 142 0 l 0 551 z" FillRule="evenodd"/>
                                        </Path.Data>
                                    </Path>
                                    <Ellipse Canvas.Left="13426" Canvas.Top="13375" Width="278" Height="278" StrokeThickness="50" Stroke="{DynamicResource IconForeground}"/>
                                    <Path StrokeThickness="50" Stroke="{DynamicResource IconForeground}">
                                        <Path.Data>
                                            <PathGeometry Figures="m 13636 13395 c -45 -27 -96 -27 -142 0 l 0 -128 c 0 -94 142 -94 142 0 l 0 128 z" FillRule="evenodd"/>
                                        </Path.Data>
                                    </Path>
                                    <Path StrokeThickness="50" Stroke="{DynamicResource IconForeground}">
                                        <Path.Data>
                                            <PathGeometry Figures="m 13636 13633 c -45 26 -97 26 -142 0 l 0 550 c 0 93 142 96 142 0 l 0 -550 z" FillRule="evenodd"/>
                                        </Path.Data>
                                    </Path>
                                </Canvas>
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--REMOVEDPATIENTSICON-->
    <Style x:Key="RemovedPatientIcon" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Width="29.759362" Height="25.73905">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="-118.79304" Y="-80.31335"/>
                                </Canvas.RenderTransform>
                                <Path StrokeThickness="1" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256">
                                    <Path.Data>
                                        <PathGeometry Figures="m 137.403 90.221 c 0 -4.33 -1.857 -9.199 -6.786 -9.199 -4.903 0 -6.698 5.051 -6.698 9.199 0 3.869 2.98 10.095 6.75 10.095 4.028 0 6.734 -6.598 6.734 -10.095 z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path StrokeThickness="1" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256">
                                    <Path.Data>
                                        <PathGeometry Figures="m 127.846 99.135 c -2.962 0.423 -5.317 1.429 -7.672 2.762 -1.125 0.611 -0.746 1.643 0.455 1.643 6.731 0 10.04408 -0.18584 16.77508 -0.18584 0.784 0 0.75359 -0.55627 -0.14341 -1.22627 C 136.746 99.469972 137.04962 99.561162 133.562 99.111" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                            </Canvas>
                            <Path StrokeThickness="1" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.92560005">
                                <Path.Data>
                                    <PathGeometry Figures="m 23.488211 13.9054 c -3.06 0 -5.5625 2.5025 -5.5625 5.5625 0 3.06 2.5025 5.5625 5.5625 5.5625 3.061 0 5.5625 -2.5015 5.5625 -5.5625 0 -3.061 -2.5015 -5.5625 -5.5625 -5.5625 z" FillRule="evenodd"/>
                                </Path.Data>
                            </Path>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="-118.79304" Y="-80.31335"/>
                                </Canvas.RenderTransform>
                                <Line X1="145.011" Y1="99.773003" X2="139.573" Y2="99.773003" StrokeThickness="1" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--CHIPICON-->
    <Style x:Key="ChipIcon" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Width="29.763298" Height="29.7633">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Rectangle  Canvas.Left="8" Canvas.Top="8" Width="14" Height="14" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line X1="14.881648" Y1="5.2476592" X2="14.881648" Y2="0.70864999" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line  X1="14.881648" Y1="29.054651" X2="14.881648" Y2="24.489649" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line  X1="17.716646" Y1="5.2476592" X2="17.716646" Y2="0.70864999" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line X1="17.716646" Y1="29.054651" X2="17.716646" Y2="24.489649" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line X1="20.55065" Y1="5.2476592" X2="20.55065" Y2="0.70864999" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line X1="20.55065" Y1="29.054651" X2="20.55065" Y2="24.489649" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line X1="12.046649" Y1="5.2476592" X2="12.046649" Y2="0.70864999" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line X1="12.046649" Y1="29.054651" X2="12.046649" Y2="24.489649" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line X1="9.2126493" Y1="5.2476592" X2="9.2126493" Y2="0.70864999" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line X1="9.2126493" Y1="29.054651" X2="9.2126493" Y2="24.489649" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line X1="24.51565" Y1="14.880654" X2="29.054647" Y2="14.880654" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line X1="0.7086494" Y1="14.880654" X2="5.250649" Y2="14.880654" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line X1="24.51565" Y1="17.715647" X2="29.054647" Y2="17.715647" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line X1="0.7086494" Y1="17.715647" X2="5.250649" Y2="17.715647" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line X1="24.51565" Y1="20.550653" X2="29.054647" Y2="20.550653" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line X1="0.7086494" Y1="20.550653" X2="5.250649" Y2="20.550653" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line X1="24.51565" Y1="12.046655" X2="29.054647" Y2="12.046655" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line X1="0.7086494" Y1="12.046655" X2="5.250649" Y2="12.046655" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line X1="24.51565" Y1="9.2126551" X2="29.054647" Y2="9.2126551" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line X1="0.7086494" Y1="9.2126551" X2="5.250649" Y2="9.2126551" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--RECEIVERICON-->
    <Style x:Key="ReceiverIcon" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Width="28.629982" Height="21.0343" >
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Path StrokeThickness="1" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                <Path.Data>
                                    <PathGeometry Figures="m 25.293649 16.80165 c 3.593 -3.594 3.413 -9.158 0 -12.572" FillRule="NonZero"/>
                                </Path.Data>
                            </Path>
                            <Path StrokeThickness="1" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                <Path.Data>
                                    <PathGeometry Figures="m 23.200649 14.59865 c 2.334 -2.334 2.217 -5.948 0 -8.166" FillRule="NonZero"/>
                                </Path.Data>
                            </Path>
                            <Path StrokeThickness="1" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                <Path.Data>
                                    <PathGeometry Figures="m 21.068649 12.64165 c 1.215 -1.216 1.154 -3.098 0 -4.252" FillRule="NonZero"/>
                                </Path.Data>
                            </Path>
                            <Polygon Points="117.588,145.261 110.501,145.261 110.501,138.174 117.588,138.174 124.675,131.908 124.675,151.525 " FillRule="NonZero" StrokeThickness="1.2" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                <Polygon.RenderTransform>
                                    <TranslateTransform X="-109.79235" Y="-131.19935"/>
                                </Polygon.RenderTransform>
                            </Polygon>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--RECEIVERTYPEICON-->
    <Style x:Key="ReceiverTypeIcon" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform" Height="20">
                        <Canvas Width="28.629303" Height="15.8923">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Polygon Points="164.472,144.404 159.243,144.404 159.243,139.176 164.472,139.176 169.701,134.552 169.701,149.027 " FillRule="NonZero" StrokeThickness="1" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                <Polygon.RenderTransform>
                                    <TranslateTransform X="-158.53435" Y="-133.84335"/>
                                </Polygon.RenderTransform>
                            </Polygon>
                            <Canvas >
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="-158.53435" Y="-133.84335"/>
                                </Canvas.RenderTransform>
                                <Path StrokeThickness="1" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                    <Path.Data>
                                        <PathGeometry Figures="m 180.503 148.295 h -1.105 c -0.353 0 -0.72 -0.223 -0.798 -0.654 l -0.249 -1.246 -0.524 -0.218 -1.058 0.705 c -0.246 0.175 -0.711 0.228 -1.027 -0.102 l -0.781 -0.782 c -0.232 -0.235 -0.357 -0.628 -0.102 -1.025 l 0.705 -1.059 -0.218 -0.524 -1.247 -0.25 c -0.364 -0.077 -0.654 -0.358 -0.653 -0.797 v -1.106 c 0.02 -0.362 0.207 -0.704 0.653 -0.797 l 1.247 -0.249 0.218 -0.525 -0.705 -1.058 c -0.195 -0.281 -0.202 -0.715 0.102 -1.026 l 0.781 -0.782 c 0.327 -0.298 0.694 -0.332 1.027 -0.102 l 1.058 0.706 0.524 -0.219 0.249 -1.246 c 0.083 -0.35 0.364 -0.654 0.798 -0.654 h 1.105 c 0.393 0 0.705 0.238 0.798 0.654 l 0.249 1.246 0.525 0.219 1.058 -0.706 c 0.286 -0.18 0.685 -0.217 1.026 0.102 l 0.782 0.782 c 0.241 0.271 0.347 0.633 0.102 1.026 l -0.706 1.058 0.219 0.524 1.246 0.25 c 0.365 0.088 0.649 0.358 0.653 0.797 v 1.106 c 10e-4 0.353 -0.248 0.704 -0.653 0.797 l -1.246 0.25 -0.219 0.524 0.706 1.059 c 0.226 0.352 0.16 0.755 -0.102 1.025 l -0.782 0.782 c -0.286 0.293 -0.725 0.297 -1.026 0.102 l -1.058 -0.705 -0.524 0.218 -0.25 1.246 c -0.114 0.477 -0.477 0.649 -0.798 0.654 z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path StrokeThickness="1" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256">
                                    <Path.Data>
                                        <PathGeometry Figures="m 179.951 143.683 c 1.042 0 1.893 -0.851 1.893 -1.894 0 -1.042 -0.851 -1.893 -1.893 -1.893 -1.043 0 -1.894 0.851 -1.894 1.893 0.001 1.043 0.851 1.894 1.894 1.894 z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MICROPHONEICON-->
    <Style x:Key="MicrophoneIcon" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Width="16.417299" Height="26.810301">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="-211.44135" Y="-128.71535"/>
                                </Canvas.RenderTransform>
                                <Path StrokeThickness="1" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256">
                                    <Path.Data>
                                        <PathGeometry Figures="m 219.691 129.424 0 0 c 2.196 0 3.994 1.797 3.994 3.993 v 10.192 c 0 2.197 -1.798 3.994 -3.994 3.994 l 0 0 c -2.196 0 -3.993 -1.797 -3.993 -3.994 v -10.192 c 0 -2.196 1.797 -3.993 3.993 -3.993 z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Line X1="214.356" Y1="154.817" X2="225.119" Y2="154.817" StrokeThickness="1" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                                <Line X1="219.73801" Y1="154.817" X2="219.73801" Y2="151.29201" StrokeThickness="1" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                                <Path StrokeThickness="1" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                    <Path.Data>
                                        <PathGeometry Figures="m 212.15 139.816 v 3.976 c 0 9.692 15 9.675 15 0 v -3.976" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--CONFIGICON-->
    <Style x:Key="ConfigIcon" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Width="20.838303" Height="20.838301">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Path StrokeThickness="1" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                <Path.Data>
                                    <PathGeometry Figures="M 11.244651 20.129652 H 9.5936511 c -0.525 0 -1.074 -0.332 -1.19 -0.976 l -0.373 -1.861 -0.782 -0.325 -1.58 1.053 c -0.366 0.261 -1.06 0.339 -1.533 -0.151 l -1.167 -1.168 c -0.347 -0.352 -0.533 -0.938 -0.151 -1.532 l 1.053 -1.579 -0.325 -0.783 -1.86 -0.373 c -0.546 -0.116 -0.97799998 -0.535 -0.97699998 -1.19 V 9.5936516 c 0.029 -0.541 0.30999998 -1.052 0.97699998 -1.19 l 1.86 -0.372 0.325 -0.783 -1.053 -1.58 c -0.291 -0.42 -0.302 -1.067 0.151 -1.532 l 1.167 -1.167 c 0.488 -0.445 1.037 -0.496 1.533 -0.152 l 1.58 1.054 0.782 -0.326 0.373 -1.86 c 0.123 -0.523 0.543 -0.97799996 1.19 -0.97699996 h 1.6509999 c 0.586 0 1.052 0.35399996 1.189 0.97699996 l 0.373 1.86 0.784 0.326 1.58 -1.054 c 0.427 -0.268 1.021 -0.324 1.532 0.152 l 1.167 1.167 c 0.361 0.404 0.519 0.945 0.151 1.532 l -1.054 1.58 0.326 0.782 1.86 0.373 c 0.546 0.131 0.97 0.536 0.977 1.19 v 1.6510004 c 0.001 0.525 -0.37 1.052 -0.977 1.19 l -1.86 0.373 -0.326 0.783 1.054 1.579 c 0.337 0.526 0.24 1.128 -0.151 1.532 l -1.167 1.168 c -0.428 0.438 -1.083 0.442 -1.532 0.151 l -1.58 -1.053 -0.783 0.325 -0.374 1.861 c -0.168 0.712 -0.709 0.969 -1.189 0.976 z" FillRule="NonZero"/>
                                </Path.Data>
                            </Path>
                            <Path StrokeThickness="1" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256">
                                <Path.Data>
                                    <PathGeometry Figures="m 10.419651 14.260652 c 2.116 0 3.843 -1.727 3.843 -3.844 0 -2.1160004 -1.727 -3.8430004 -3.843 -3.8430004 -2.1169999 0 -3.8439999 1.727 -3.8439999 3.8430004 0 2.117 1.727 3.844 3.8439999 3.844 z" FillRule="NonZero"/>
                                </Path.Data>
                            </Path>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--FITTINGASSISTANCEICON-->
    <Style x:Key="FittingAssistanceIcon" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Width="270.53517" Height="290.00146">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Canvas >
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="-58.393404" Y="-85.002705"/>
                                </Canvas.RenderTransform>
                                <Path StrokeThickness="12" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="4">
                                    <Path.Data>
                                        <PathGeometry Figures="m 149.36885 308.38593 c -10.00187 -1.9417 3.0118 -16.6126 -11.24317 -28.08598 -14.25497 -11.47338 -25.80887 -36.01804 -25.80887 -59.48886 0 -44.99123 36.47259 -81.46382 81.46382 -81.46382 44.99122 0 81.46381 36.4726 81.46381 81.46382 0 24.76052 -11.04665 46.94096 -28.48045 61.88181 -6.90015 5.91346 1.0911 21.61017 -5.3784 26.03799" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path StrokeThickness="12" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="4">
                                    <Path.Data>
                                        <PathGeometry Figures="m 146.52263 306.12199 95.94457 0 0 63.61968 -95.94457 0 z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path StrokeThickness="8" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat">
                                    <Path.Data>
                                        <PathGeometry Figures="m 147.51291 326.80745 94.62258 0.0613" FillRule="evenodd"/>
                                    </Path.Data>
                                </Path>
                                <Path StrokeThickness="8" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat">
                                    <Path.Data>
                                        <PathGeometry Figures="m 145.40069 347.16369 97.00528 0.0613" FillRule="evenodd"/>
                                    </Path.Data>
                                </Path>
                                <Path StrokeThickness="8" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat">
                                    <Path.Data>
                                        <PathGeometry Figures="m 195.00001 112.14556 0 -37.142855" FillRule="evenodd"/>
                                    </Path.Data>
                                </Path>
                                <Path StrokeThickness="8" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat">
                                    <Path.Data>
                                        <PathGeometry Figures="M 251.7857 121.01697 270.35713 88.85031" FillRule="evenodd"/>
                                    </Path.Data>
                                </Path>
                                <Path StrokeThickness="8" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat">
                                    <Path.Data>
                                        <PathGeometry Figures="m 290.55953 162.00505 32.16665 -18.57142" FillRule="evenodd"/>
                                    </Path.Data>
                                </Path>
                                <Path StrokeThickness="8" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat">
                                    <Path.Data>
                                        <PathGeometry Figures="m 303.78571 220.93362 37.14287 2e-5" FillRule="evenodd"/>
                                    </Path.Data>
                                </Path>
                                <Path StrokeThickness="8" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat">
                                    <Path.Data>
                                        <PathGeometry Figures="m 293.98812 273.57648 32.16665 18.57146" FillRule="evenodd"/>
                                    </Path.Data>
                                </Path>
                                <Path StrokeThickness="8" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat">
                                    <Path.Data>
                                        <PathGeometry Figures="M 135.53629 123.99255 116.96486 91.82589" FillRule="evenodd"/>
                                    </Path.Data>
                                </Path>
                                <Path StrokeThickness="8" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat">
                                    <Path.Data>
                                        <PathGeometry Figures="M 94.76246 160.98063 62.595806 142.40921" FillRule="evenodd"/>
                                    </Path.Data>
                                </Path>
                                <Path StrokeThickness="8" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat">
                                    <Path.Data>
                                        <PathGeometry Figures="m 83.536276 219.9092 -37.14287 2e-5" FillRule="evenodd"/>
                                    </Path.Data>
                                </Path>
                                <Path StrokeThickness="8" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="4" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat">
                                    <Path.Data>
                                        <PathGeometry Figures="M 97.33387 274.55206 65.167216 293.12352" FillRule="evenodd"/>
                                    </Path.Data>
                                </Path>
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--HELPICON-->
    <Style x:Key="HelpIcon" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Width="41.938999" Height="41.763001">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <MatrixTransform Matrix="1.4007799 0 0 1.4032296 -163.93008 -186.42182"/>
                                </Canvas.RenderTransform>
                                <Path StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                    <Path.Data>
                                        <PathGeometry Figures="m 126.832 143.47 c 0.082 -6.585 10.367 -6.598 10.367 -0.04 0 3.79 -5.279 2.848 -5.279 9.51" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Line X1="131.91901" Y1="155.967" X2="131.91901" Y2="156.946" StrokeThickness="1.5" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            </Canvas>
                            <Path StrokeThickness="2" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256">
                                <Path.Data>
                                    <PathGeometry Figures="m 20.9695 40.76655 c 11.000468 0 19.97305 -8.931646 19.97305 -19.885049 0 -10.9534038 -8.972582 -19.88505093 -19.97305 -19.88505093 -11.0018766 0 -19.97304993 8.93164713 -19.97304993 19.88505093 0 10.953403 8.97258263 19.885049 19.97304993 19.885049 z" FillRule="NonZero"/>
                                </Path.Data>
                            </Path>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--EXITICON-->
    <Style x:Key="ExitIcon" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Width="1000" Height="975">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="-8700" Y="-15740"/>
                                </Canvas.RenderTransform>
                                <Path StrokeThickness="55" Stroke="{DynamicResource IconForeground}" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                    <Path.Data>
                                        <PathGeometry Figures="m 9465 16318 149 0 0 89 251 -178 -251 -178 0 89 -149 0 0 178 z m 74 0 m 75 44 m 125 -44 m 0 -178 m -125 -44 m -75 44 m -74 89" FillRule="evenodd"/>
                                    </Path.Data>
                                </Path>
                                <Path StrokeThickness="55" Stroke="{DynamicResource IconForeground}" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                    <Path.Data>
                                        <PathGeometry Figures="m 9647 15960 0 -69 c 0 -65 -59 -123 -123 -123 l -676 0 c -49 0 -123 39 -123 123 l 0 676 c 0 66 59 123 123 123 l 676 0 c 60 0 123 -55 123 -123 l 0 -69" FillRule="evenodd"/>
                                    </Path.Data>
                                </Path>
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--SMALLBUTTONICONS-->
    <SolidColorBrush x:Key="SmallIconBrush" Color="Black"/>

    <!--ADDPATIENTICON-->
    <Style x:Key="AddPatientIcon" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Width="29.759362" Height="25.73905">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="-118.79304" Y="-80.31335"/>
                                </Canvas.RenderTransform>
                                <Path StrokeThickness="1" Stroke="{DynamicResource SmallIconBrush}" StrokeMiterLimit="22.9256">
                                    <Path.Data>
                                        <PathGeometry Figures="m 137.403 90.221 c 0 -4.33 -1.857 -9.199 -6.786 -9.199 -4.903 0 -6.698 5.051 -6.698 9.199 0 3.869 2.98 10.095 6.75 10.095 4.028 0 6.734 -6.598 6.734 -10.095 z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path StrokeThickness="1" Stroke="{DynamicResource SmallIconBrush}" StrokeMiterLimit="22.9256">
                                    <Path.Data>
                                        <PathGeometry Figures="m 127.846 99.135 c -2.962 0.423 -5.317 1.429 -7.672 2.762 -1.125 0.611 -0.746 1.643 0.455 1.643 6.731 0 10.04408 -0.18584 16.77508 -0.18584 0.784 0 0.75359 -0.55627 -0.14341 -1.22627 C 136.746 99.469972 137.04962 99.561162 133.562 99.111" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                            </Canvas>
                            <Path StrokeThickness="1" Stroke="{DynamicResource SmallIconBrush}" StrokeMiterLimit="22.92560005">
                                <Path.Data>
                                    <PathGeometry Figures="m 23.488211 13.9054 c -3.06 0 -5.5625 2.5025 -5.5625 5.5625 0 3.06 2.5025 5.5625 5.5625 5.5625 3.061 0 5.5625 -2.5015 5.5625 -5.5625 0 -3.061 -2.5015 -5.5625 -5.5625 -5.5625 z" FillRule="evenodd"/>
                                </Path.Data>
                            </Path>
                            <Canvas >
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="-118.79304" Y="-80.31335"/>
                                </Canvas.RenderTransform>
                                <Line X1="142.29201" Y1="102.492" X2="142.29201" Y2="97.054001" StrokeThickness="1" Stroke="#FF000000" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                                <Line X1="145.011" Y1="99.773003" X2="139.573" Y2="99.773003" StrokeThickness="1" Stroke="#FF000000" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--EDITICON-->
    <Style x:Key="EditIcon" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform" >
                        <Canvas Width="29.764965" Height="29.793448">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="-239.48325" Y="-25.406661"/>
                                </Canvas.RenderTransform>
                                <Path StrokeThickness="1" Stroke="{DynamicResource SmallIconBrush}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                    <Path.Data>
                                        <PathGeometry Figures="m 242.724 43.363 c 5.463 -3.633 12.35 3.617 8.511 8.651 l 14.254 -14.213 c 0 -5.214 -4.732 -8.619 -8.569 -8.619 l -14.196 14.181 z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path StrokeThickness="1" Stroke="{DynamicResource SmallIconBrush}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                    <Path.Data>
                                        <PathGeometry Figures="m 258.596 27.491 -1.677 1.691 c 4.754 0 8.569 4.417 8.569 8.619 l 1.704 -1.719 c 4.65 -4.649 -3.85 -13.337 -8.596 -8.591 z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path StrokeThickness="1" Stroke="{DynamicResource SmallIconBrush}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                    <Path.Data>
                                        <PathGeometry Figures="m 251.234 52.014 c 3.896 -5.332 -3.272 -12.183 -8.511 -8.651 l -2.468 9.507 c -0.306 1.142 0.542 1.852 1.658 1.553 l 9.321 -2.409 z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--REMOVEICON-->
    <Style x:Key="RemoveIcon" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Width="25.758028" Height="29.7633">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Path StrokeThickness="1" Stroke="{DynamicResource SmallIconBrush}" StrokeMiterLimit="22.9256">
                                <Path.Data>
                                    <PathGeometry Figures="M 6.6382835 29.05465 H 19.283283 c 0.939 0 1.776 -0.875 1.776 -2.025 l 2.024 -17.21 H 2.8362835 l 2.025 17.21 c 0 0.834 0.749 2.025 1.777 2.025 z" FillRule="NonZero"/>
                                </Path.Data>
                            </Path>
                            <Path StrokeThickness="1" Stroke="{DynamicResource SmallIconBrush}" StrokeMiterLimit="22.9256">
                                <Path.Data>
                                    <PathGeometry Figures="m 1.8242835 4.75865 c -1.47900001 0 -1.49600001 5.061 0 5.061 H 24.096283 c 1.309 0 1.232 -5.061 0 -5.061 H 1.8242835 z" FillRule="NonZero"/>
                                </Path.Data>
                            </Path>
                            <Path StrokeThickness="1" Stroke="{DynamicResource SmallIconBrush}" StrokeMiterLimit="22.9256">
                                <Path.Data>
                                    <PathGeometry Figures="m 6.8872835 1.72065 v 3.038 H 19.035283 v -3.038 c 0 -0.46 -0.605 -1.01200001 -1.012 -1.01200001 H 7.8992835 c -0.531 0 -1.012 0.49900001 -1.012 1.01200001 z" FillRule="NonZero"/>
                                </Path.Data>
                            </Path>
                            <Line X1="9.7512836" Y1="25.142649" X2="9.7512836" Y2="13.692651" StrokeThickness="1" Stroke="{DynamicResource SmallIconBrush}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            <Line X1="16.122282" Y1="25.165651" X2="16.122282" Y2="13.715653" StrokeThickness="1" Stroke="{DynamicResource SmallIconBrush}" StrokeMiterLimit="22.9256" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--OTHERICONS-->
    <!--SEARCHICON-->
    <Style x:Key="SearchIcon" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform" Height="24" Margin="10,2,0,0">
                        <Canvas Width="23.997187" Height="23.928692">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="-184.26761" Y="-136.4352"/>
                                </Canvas.RenderTransform>
                                <Path StrokeThickness="1" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256">
                                    <Path.Data>
                                        <PathGeometry Figures="m 199.314 153.698 c 4.578 0 8.313 -3.734 8.313 -8.313 0 -4.579 -3.734 -8.312 -8.313 -8.312 -4.579 0 -8.312 3.733 -8.312 8.312 0 4.579 3.734 8.313 8.312 8.313 z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <Path StrokeThickness="1" Stroke="{DynamicResource IconForeground}" StrokeMiterLimit="22.9256">
                                    <Path.Data>
                                        <PathGeometry Figures="m 192.151 149.682 c 0.65 1.125 1.712 2.153 2.816 2.791 l -6.639 6.639 c -1.871 1.87 -4.648 -0.959 -2.831 -2.775 l 6.654 -6.655 z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--KEYICON-->
    <Style x:Key="KeyIcon" TargetType="ContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Viewbox Stretch="Uniform" >
                        <Canvas Width="737.24161" Height="738.43809">
                            <Canvas.RenderTransform>
                                <TranslateTransform X="0" Y="0"/>
                            </Canvas.RenderTransform>
                            <Canvas.Resources/>
                            <Canvas>
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="-6043.0001" Y="-15480.562"/>
                                </Canvas.RenderTransform>
                                <Path StrokeThickness="50" Stroke="#FFFFFFFF" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                    <Path.Data>
                                        <PathGeometry Figures="m 6364 15968 96 -96 c 206 119 394 -144 237 -307 -172 -164 -419 43 -307 238 l -322 321 0 70 70 0 48 -48 78 -1 1 -78 21 -22 77 2 1 -79 z" FillRule="evenodd"/>
                                    </Path.Data>
                                </Path>
                                <Ellipse Canvas.Left="6577" Canvas.Top="15595" Width="90" Height="90" StrokeThickness="30" Stroke="#FFFFFFFF"/>
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--STYLES-->
    <!--TOOLTIP-->
    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
        <Setter Property="FontWeight" Value="{DynamicResource FontWeight}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Style="{DynamicResource BlackRoundedBorderStyle}" Background="{DynamicResource BackgroundBrush}" 
                            Padding="5,2,5,2" Margin="1">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--IMAGE-->
    <Style TargetType="{x:Type Image}" x:Key="ButtonImageStyle">
        <Setter Property="Width" Value="25"/>
    </Style>

    <!--BUTTON-->
    <Style x:Key="SquareButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Background" Value="{DynamicResource InsideBorderBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <classes:RoundedCornersPolygon Points="0,0 100,0, 100,100, 0,100" StrokeThickness="2" 
                                                       Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" 
                                                       ArcRoundness="10" IsClosed="True" Stretch="Fill"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MouseOverBackgroundBrush}"/>
                <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MsgBoxButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
        <Setter Property="FontWeight" Value="{DynamicResource FontWeight}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter.Content>
                                <AccessText Text="{TemplateBinding Content}" Margin="10, 0, 10, 0" 
                                            FontFamily="{DynamicResource FontFamily}"/>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource FocusedBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource FocusedBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MouseOverBackgroundBrush}"/>
                <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ButtonStyle">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
        <Setter Property="FontWeight" Value="{DynamicResource FontWeight}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource FocusedBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource FocusedBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MouseOverBackgroundBrush}"/>
                <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="InsideButtonStyle">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
        <Setter Property="FontWeight" Value="{DynamicResource FontWeight}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource FocusedBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource FocusedBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MouseOverBackgroundBrush}"/>
                <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--BORDER-->
    <Style TargetType="{x:Type Border}" x:Key="BorderStyle">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="0.6"/>
        <Setter Property="Background" Value="{StaticResource InsideBorderBackgroundBrush}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="RoundedBorderStyle">
        <Setter Property="Background" Value="{StaticResource InsideBorderBackgroundBrush}"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="BlackRoundedBorderStyle">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <!--CHECKBOX-->
    <Style TargetType="{x:Type CheckBox}" x:Key="CheckBoxStyle">
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="BorderThickness" Value="{DynamicResource ControlBorderThickness}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Margin="0,1,0,0" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                        <StackPanel Orientation="Horizontal">
                            <Grid Width="Auto" Height="Auto">
                                <Border x:Name="Border" Background="{TemplateBinding Background}" 
                                    CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True" Width="14" Height="14"  HorizontalAlignment="Left">
                                    <Path x:Name="CheckMark" Stroke="Black" StrokeThickness="2" 
                                  SnapsToDevicePixels="False" Data="M 1 4 L 3 7 8 1"
                                  HorizontalAlignment="Center"  VerticalAlignment="Center"/>
                                </Border>
                            </Grid>
                            <ContentPresenter Margin="3,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource FocusedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CheckMark"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MouseOverBackgroundBrush}"/>
                            <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DATAGRID-->
    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="10,0,0,0"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Padding="{TemplateBinding Padding}" BorderBrush="#00000000" 
                            BorderThickness="0" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="{x:Type DataGrid}" x:Key="DataGridStyle">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource DataGridBackgroundBrush}"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource DataGridAlternateRowBrush}"/>
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource DataGridColumnHeaderStyle}"/>
        <Setter Property="CellStyle" Value="{DynamicResource DataGridCellStyle}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
        <Setter Property="FontWeight" Value="{DynamicResource FontWeight}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Button Command="ApplicationCommands.SelectAll" Focusable="False" 
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" 
                                                Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}">
                                            <Button.Visibility>
                                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                    <Binding.ConverterParameter>
                                                        <DataGridHeadersVisibility>All</DataGridHeadersVisibility>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Button.Visibility>
                                        </Button>
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Grid.ColumnSpan="2">
                                            <DataGridColumnHeadersPresenter.Visibility>
                                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                    <Binding.ConverterParameter>
                                                        <DataGridHeadersVisibility>Column</DataGridHeadersVisibility>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </DataGridColumnHeadersPresenter.Visibility>
                                        </DataGridColumnHeadersPresenter>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" 
                                                                CanHorizontallyScroll="False" Grid.ColumnSpan="2" CanVerticallyScroll="False" 
                                                                ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                                                ContentStringFormat="{TemplateBinding ContentStringFormat}" Grid.Row="1"/>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" 
                                                   Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                   ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource ScrollBarStyle}"/>
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <!--<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" 
                                                       Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                       ViewportSize="{TemplateBinding ViewportWidth}" Style="{DynamicResource ScrollBarStyle}"/>-->
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource MouseOverBackgroundBrush}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="DataGridColumnHeaderStyle">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Background" Value="{StaticResource DataGridHeaderBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DataGridHeaderBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
        <Setter Property="FontWeight" Value="{DynamicResource FontWeight}"/>
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid Background="{TemplateBinding Background}">
                        <Label HorizontalAlignment="Left" Margin="-2" Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter Margin="10,0,0,0"/>
                        </Label>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MouseOverBackgroundBrush}" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
            </Trigger>
            <Trigger Property="SortDirection" Value="Ascending">
                <Setter Property="Background" Value="{StaticResource MouseOverBackgroundBrush}" />
                <Setter Property="Foreground" Value="{StaticResource MouseOverForegroundBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid Background="{StaticResource MouseOverBackgroundBrush}">
                                <Label HorizontalAlignment="Left" Margin="-2" Foreground="{TemplateBinding Foreground}">
                                    <ContentPresenter Margin="10,0,0,0"/>
                                </Label>
                                <Path x:Name="SortArrow"
									HorizontalAlignment="Right" VerticalAlignment="Center"                                              
									Width="9" Height="6" Margin="0,0,6,0"
									Stretch="Fill" Opacity="1" Fill="{StaticResource SortArrowBrush}"
									RenderTransformOrigin="0.5,0.4"
									Visibility="Visible"
									Data="M0,0 L1,0 0.5,1 z" >
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="180"/>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="SortDirection" Value="Descending">
                <Setter Property="Background" Value="{StaticResource MouseOverBackgroundBrush}" />
                <Setter Property="Foreground" Value="{StaticResource MouseOverForegroundBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid Background="{StaticResource MouseOverBackgroundBrush}">
                                <Label HorizontalAlignment="Left" Margin="-2" Foreground="{TemplateBinding Foreground}">
                                    <ContentPresenter Margin="10,0,0,0"/>
                                </Label>
                                <Path x:Name="SortArrow"
									HorizontalAlignment="Right" VerticalAlignment="Center"                                           
									Width="9" Height="6" Margin="0,0,6,0"
									Stretch="Fill" Opacity="1" Fill="{StaticResource SortArrowBrush}"
									RenderTransformOrigin="0.5,0.4"
									Visibility="Visible"
									Data="M0,0 L1,0 0.5,1 z" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--LABEL-->
    <Style TargetType="{x:Type Label}" x:Key="AdjustLabelStyle">
        <Setter Property="Height" Value="auto"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Margin" Value="0,10,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontSize" Value="10.7"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="LabelStyle">
        <Setter Property="Height" Value="auto"/>
        <Setter Property="Width" Value="95"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
        <Setter Property="FontWeight" Value="{DynamicResource FontWeight}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="LabelTitleStyle">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <!--TEXTBLOCK-->
    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockStyle">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10,0,10,0"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
        <Setter Property="FontWeight" Value="{DynamicResource FontWeight}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="HeaderTextBlockStyle">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10,0,10,0"/>
        <Setter Property="FontFamily" Value="{DynamicResource HeaderFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource HeaderFontSize}"/>
        <Setter Property="FontWeight" Value="{DynamicResource HeaderFontWeight}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegoundTextBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="ParameterTextBlockStyle">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
        <Setter Property="FontWeight" Value="{DynamicResource FontWeight}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <!--TEXTBOX-->
    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle">
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="5,5,10,0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="IsEnabled" Value="{Binding IsEditEnabled}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="3" Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource DisabledBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource FocusedBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="FormTextBoxStyle">
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="5,5,10,0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
        <Setter Property="FontWeight" Value="{DynamicResource FontWeight}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="IsEnabled" Value="{Binding IsEditEnabled}"/>
        <Setter Property="Background" Value="{DynamicResource FormTextBoxBrush}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ErrorTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource DisabledBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource FocusedBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="SearchTextBoxStyle">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="10,7.5,10,5"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="BorderThickness" Value="0.5,0.5,0,0.5"/>
        <Setter Property="IsEnabled" Value="{Binding IsEditEnabled}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" CornerRadius="10" SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="10,4,10,2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--PASSWORDBOX-->
    <Style TargetType="{x:Type PasswordBox}" x:Key="PasswordBoxStyle">
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="5,5,10,0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="IsEnabled" Value="{Binding IsEditEnabled}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="3" Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource DisabledBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource FocusedBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type PasswordBox}" x:Key="FormPasswordBoxStyle">
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="5,5,10,0"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Background" Value="{DynamicResource FormTextBoxBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
        <Setter Property="FontWeight" Value="{DynamicResource FontWeight}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ErrorTemplate}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource DisabledBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource FocusedBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MASKEDTEXTBOX-->
    <Style TargetType="{x:Type Custom:MaskedTextBox}" x:Key="MaskedTextBoxStyle" >
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="5,5,10,0"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Background" Value="{DynamicResource FormTextBoxBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
        <Setter Property="FontWeight" Value="{DynamicResource FontWeight}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ErrorTemplate}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource DisabledBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource FocusedBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--INTEGERUPDOWN-->
    <Style TargetType="{x:Type xctk:IntegerUpDown}" x:Key="IntegerUpDownStyle">
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="5,5,10,0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="IsEnabled" Value="{Binding IsEditEnabled}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template" Value="{DynamicResource IntegerUpDownControlTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource FocusedBorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="IntegerUpDownControlTemplate" TargetType="{x:Type Control}">
        <xctk:ButtonSpinner x:Name="PART_Spinner" AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}" 
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" IsTabStop="False" Style="{DynamicResource ButtonSpinnerStyle}"
                            ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}">
            <xctk:WatermarkTextBox x:Name="PART_TextBox" AutoMoveFocus="{Binding AutoMoveFocus, RelativeSource={RelativeSource TemplatedParent}}" 
                                   AutoSelectBehavior="{Binding AutoSelectBehavior, RelativeSource={RelativeSource TemplatedParent}}" 
                                   AcceptsReturn="False" BorderThickness="0" Background="{TemplateBinding Background}" 
                                   ContextMenu="{TemplateBinding ContextMenu}" Foreground="{TemplateBinding Foreground}" 
                                   FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" 
                                   FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" 
                                   FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   IsTabStop="{TemplateBinding IsTabStop}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" 
                                   MinWidth="20" Padding="{TemplateBinding Padding}" 
                                   TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}" 
                                   TextWrapping="NoWrap" TabIndex="{TemplateBinding TabIndex}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                   WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}" 
                                   Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}"/>
        </xctk:ButtonSpinner>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource FocusedBorderBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ButtonSpinnerStyle" TargetType="{x:Type xctk:ButtonSpinner}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource ControlBorderThickness}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:ButtonSpinner}">
                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{DynamicResource ControlBorderThickness}" 
                            CornerRadius="3" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Content="{TemplateBinding Content}" Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Grid Grid.Column="1" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <RepeatButton x:Name="PART_IncreaseButton" IsTabStop="{TemplateBinding IsTabStop}" 
                                              Style="{DynamicResource IntegerUpDownRepeatButtonStyle}" Background="{TemplateBinding Background}">
                                    <RepeatButton.ContentTemplate>
                                        <DataTemplate>
                                            <Path Data="M0,3C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3z" 
                                                  Focusable="False" Fill="{DynamicResource {ComponentResourceKey ResourceId=GlyphNormalForegroundKey, TypeInTargetAssembly={x:Type Themes1:ResourceKeys}}}" 
                                                  HorizontalAlignment="Center" Height="4" SnapsToDevicePixels="True"
                                                  VerticalAlignment="Center" Width="7"/>
                                        </DataTemplate>
                                    </RepeatButton.ContentTemplate>
                                </RepeatButton>
                                <RepeatButton x:Name="PART_DecreaseButton" IsTabStop="{TemplateBinding IsTabStop}" Grid.Row="1" 
                                              Style="{DynamicResource IntegerUpDownRepeatButtonStyle}" Background="{TemplateBinding Background}">
                                    <RepeatButton.ContentTemplate>
                                        <DataTemplate>
                                            <Path Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z" 
                                                  Fill="{DynamicResource {ComponentResourceKey ResourceId=GlyphNormalForegroundKey, TypeInTargetAssembly={x:Type Themes1:ResourceKeys}}}" 
                                                  Focusable="False" HorizontalAlignment="Center" Height="4" 
                                                  SnapsToDevicePixels="True" VerticalAlignment="Center" Width="7"/>
                                        </DataTemplate>
                                    </RepeatButton.ContentTemplate>
                                </RepeatButton>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlDisabledBackgroundKey, TypeInTargetAssembly={x:Type Themes1:ResourceKeys}}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" SourceName="PART_IncreaseButton" Value="False">
                            <Setter Property="ContentTemplate" TargetName="PART_IncreaseButton">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Path Data="M0,3C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3z" 
                                              Fill="{DynamicResource {ComponentResourceKey ResourceId=GlyphDisabledForegroundKey, TypeInTargetAssembly={x:Type Themes1:ResourceKeys}}}" 
                                              Focusable="False" HorizontalAlignment="Center" Height="4" 
                                              SnapsToDevicePixels="True" VerticalAlignment="Center" Width="7"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" SourceName="PART_DecreaseButton" Value="False">
                            <Setter Property="ContentTemplate" TargetName="PART_DecreaseButton">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Path Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z" 
                                              Fill="{DynamicResource {ComponentResourceKey ResourceId=GlyphDisabledForegroundKey, TypeInTargetAssembly={x:Type Themes1:ResourceKeys}}}" 
                                              Focusable="False" HorizontalAlignment="Center" Height="4" 
                                              SnapsToDevicePixels="True" VerticalAlignment="Center" Width="7"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--RADIOBUTTON-->
    <Style TargetType="{x:Type RadioButton}" x:Key="RadioButtonStyle">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Grid Height="16" Width="16">
                                <Border x:Name="RadioOuter" Background="White" BorderBrush="{StaticResource BorderBrush}" BorderThickness="2" CornerRadius="4" />
                                <Border CornerRadius="2" Margin="4" x:Name="RadioMark" Background="Black" BorderThickness="1" Visibility="Hidden"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <TextBlock x:Name="TextBlock"  Margin="3,2,0,0" Style="{DynamicResource TextBlockStyle}" Width="auto" Height="auto"><InlineUIContainer>
								<ContentPresenter/>
							</InlineUIContainer></TextBlock>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="RadioOuter" Property="BorderBrush" Value="{StaticResource BorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="RadioOuter" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}"/>
                            <Setter TargetName="RadioOuter" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}"/>
                            <Setter TargetName="RadioMark" Property="Background" Value="{DynamicResource DisabledForegroundBrush}"/>
                            <Setter TargetName="TextBlock" Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RadioOuter" Property="Background" Value="{DynamicResource MouseOverBackgroundBrush}"/>
                            <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="InsideToggleButtonStyle">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
        <Setter Property="FontWeight" Value="{DynamicResource FontWeight}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource FocusedBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MouseOverBackgroundBrush}"/>
                <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--COMBOBOX-->
    <Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>

    <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <classes:MyButtonChrome x:Name="Chrome" RoundCorners="True"  Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z" 
                                      x:Name="Arrow" Fill="Black" HorizontalAlignment="Center" Margin="3,1,0,0" VerticalAlignment="Center"/>
                            </Grid>
                        </classes:MyButtonChrome>
                        <Border BorderThickness="{DynamicResource ControlBorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource MouseOverBackgroundBrush}"/>
                            <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource MouseOverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" 
                                  HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" 
                                         RoundCorners="false" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                        <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" 
                              HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center"/>
                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="Placement" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" 
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                   Placement="Bottom">
                <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" 
                                               MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                               MinWidth="{Binding ActualWidth, ElementName=Placement}">
                    <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" 
                            BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                        <ScrollViewer>
                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <Themes:ListBoxChrome x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                  Background="{TemplateBinding Background}" Grid.ColumnSpan="2" RenderMouseOver="{TemplateBinding IsMouseOver}" 
                                  RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"/>
            <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" 
                     Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            <ToggleButton IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                          Grid.Column="1" Style="{StaticResource ComboBoxToggleButton}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="true">
                <Setter Property="RenderFocused" TargetName="Border" Value="true"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                <Setter Property="Background" Value="#FFF4F4F4"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="5,5,10,0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" 
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" 
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                                           MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                    <ScrollViewer CanContentScroll="true">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                </Border>
                            </Themes:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Style="{StaticResource ComboBoxReadonlyToggleButton}"/>
                        <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                            <Setter Property="Color" TargetName="Shdw" Value="DimGray"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource FocusedBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#FFF0F0F0"/>
            </Trigger>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="BorderBrush" Value="#E2E3EA"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="3"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ERROR TEMPLATE-->
    <ControlTemplate x:Key="ErrorTemplate">
        <Grid x:Name="container">
            <AdornedElementPlaceholder Name="customAdorner"
				                           Grid.Column="0"
				                           VerticalAlignment="Center" />
            <Border x:Name="ValidationErrorElement"
				        BorderBrush="#FFDB000C"
				        BorderThickness="1.2"
				        CornerRadius="1"
				        ToolTip="{Binding ElementName=customAdorner,
				                          Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                <Grid Width="12"
					      Height="12"
					      Margin="1,-4,-4,0"
					      HorizontalAlignment="Right"
					      VerticalAlignment="Top"
					      Background="Transparent">
                    <Path Margin="1,3,0,0"
						      Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
						      Fill="#FFDC000C" />
                </Grid>
            </Border>
            <Border Width="15"
				        Height="15"
				        Margin="0 0 3 0"
				        HorizontalAlignment="Right"
				        VerticalAlignment="Center"
				        Background="Red"
				        CornerRadius="10"
				        ToolTip="{Binding ElementName=customAdorner,
				                          Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                <TextBlock HorizontalAlignment="center"
					           VerticalAlignment="center"
					           FontWeight="Bold"
					           Foreground="white"
					           Text="!" />
            </Border>
        </Grid>
    </ControlTemplate>

    <!--EXPANDER-->
    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.LayoutTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="-90"/>
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Grid.LayoutTransform>
                            <Path x:Name="arrow" Grid.Column="0" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" 
                                  SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Center" Margin="4,0,0,0" 
                                              RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <!--<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>-->
                            <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" 
                                      SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Center" Margin="4,0,0,0" 
                                              RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <!--<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>-->
                            <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.LayoutTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="90"/>
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Grid.LayoutTransform>
                            <Path x:Name="arrow" Grid.Column="0" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" 
                                  SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Center" Margin="4,0,0,0" 
                                              RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <!--<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>-->
                            <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Name="arrow" Grid.Column="0" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" 
                                  SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Center" Margin="4,0,0,0" 
                                              RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <!--<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>-->
                            <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                          Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" 
                                          FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{DynamicResource ExpanderHeaderFocusVisual}" 
                                          FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" 
                                          FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" 
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" 
                                          MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"/>
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                              Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--SLIDER-->
    <Geometry x:Key="SliderThumbDisabledGeometry">M -5,-10.5 L 5,-10.5 L 5,10.5 L -5,10.5 Z</Geometry>

    <Geometry x:Key="SliderPointedThumbDisabledGeometry">M 4.5,-8.5 L -4.5,-8.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>

    <Geometry x:Key="SliderPointedThumbOuterBorderGeometry">M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>

    <Geometry x:Key="SliderPointedThumbMiddleBorderGeometry">M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z</Geometry>

    <Geometry x:Key="SliderThumbMiddleBorderGeometry">M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z</Geometry>

    <Style x:Key="HorizontalSliderUpThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true" VerticalAlignment="Center">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <TranslateTransform X="-2" Y="-10"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Border x:Name="Background" CornerRadius="5" Height="20" Width="12" VerticalAlignment="Center" 
                                Background="{StaticResource BackgroundBrush}" />
                        <Border x:Name="OuterBorder" CornerRadius="5" Height="20" Width="12" VerticalAlignment="Center" 
                                BorderBrush="{StaticResource BorderBrush}" BorderThickness="{DynamicResource ControlBorderThickness}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource MouseOverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource MouseOverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource FocusedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource DisabledBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="Foreground" Value="{StaticResource MouseOverForegroundBrush}">
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource FocusedBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalSliderDownThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true" VerticalAlignment="Center">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <TranslateTransform X="-2" Y="-10"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Border x:Name="Background" CornerRadius="5" Height="20" Width="12" VerticalAlignment="Center" 
                                Background="{StaticResource BackgroundBrush}" />
                        <Border x:Name="OuterBorder" CornerRadius="5" Height="20" Width="12" VerticalAlignment="Center" 
                                BorderBrush="{StaticResource BorderBrush}" BorderThickness="{DynamicResource ControlBorderThickness}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource MouseOverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource MouseOverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource FocusedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource DisabledBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="Foreground" Value="{StaticResource MouseOverForegroundBrush}">
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource FocusedBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Width" Value="11"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true" VerticalAlignment="Center">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <TranslateTransform X="-2" Y="-10"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Border x:Name="Background" 
                                CornerRadius="5" 
                                Height="20" Width="12" 
                                VerticalAlignment="Center" 
                                Background="{StaticResource BackgroundBrush}" />
                        <Border x:Name="OuterBorder" CornerRadius="5" Height="20" Width="12" VerticalAlignment="Center" 
                                BorderBrush="{StaticResource BorderBrush}" BorderThickness="{DynamicResource ControlBorderThickness}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource MouseOverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource MouseOverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource FocusedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource DisabledBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="Foreground" Value="{StaticResource MouseOverForegroundBrush}">
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource FocusedBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalSliderLeftThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform X="1" Y="-4"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Border x:Name="Background" CornerRadius="5" Height="12" Width="20" VerticalAlignment="Center" 
                                Background="{StaticResource BackgroundBrush}" />
                        <Border x:Name="OuterBorder" CornerRadius="5" Height="12" Width="20" VerticalAlignment="Center" 
                                BorderBrush="{StaticResource BorderBrush}" BorderThickness="{DynamicResource ControlBorderThickness}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource MouseOverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource MouseOverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource FocusedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource DisabledBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="Foreground" Value="{StaticResource MouseOverForegroundBrush}">
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource FocusedBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalSliderRightThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="-90"/>
                                        <TranslateTransform X="1" Y="-4"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Border x:Name="Background" CornerRadius="5" Height="12" Width="20" VerticalAlignment="Center" 
                                Background="{StaticResource BackgroundBrush}" />
                        <Border x:Name="OuterBorder" CornerRadius="5" Height="12" Width="20" VerticalAlignment="Center" 
                                BorderBrush="{StaticResource BorderBrush}" BorderThickness="{DynamicResource ControlBorderThickness}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource MouseOverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource MouseOverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource FocusedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource DisabledBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="Foreground" Value="{StaticResource MouseOverForegroundBrush}">
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource FocusedBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="11"/>
        <Setter Property="Width" Value="22"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true" VerticalAlignment="Center">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <TranslateTransform X="1" Y="-4"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Border x:Name="Background" CornerRadius="5" Height="12" Width="20" VerticalAlignment="Center" 
                                Background="{StaticResource BackgroundBrush}" />
                        <Border x:Name="OuterBorder" CornerRadius="5" Height="12" Width="20" VerticalAlignment="Center" 
                                BorderBrush="{StaticResource BorderBrush}" BorderThickness="{DynamicResource ControlBorderThickness}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource MouseOverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource MouseOverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource FocusedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource DisabledBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="Foreground" Value="{StaticResource MouseOverForegroundBrush}">
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource FocusedBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="IsSnapToTickEnabled" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#FFC4C4C4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" 
                                     Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                            <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" 
                                     Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                            <Border x:Name="TrackBackground" Background="{StaticResource BorderBrush}" 
                                    CornerRadius="1" Height="2" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                                <Canvas Margin="-6,-1">
                                    <Rectangle x:Name="PART_SelectionRange" Fill="{StaticResource BackgroundBrush}" 
                                               Height="4" Stroke="{StaticResource BorderBrush}" StrokeThickness="1.0" Visibility="Hidden"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{StaticResource HorizontalSliderThumbStyle}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource HorizontalSliderUpThumbStyle}"/>
                            <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource HorizontalSliderDownThumbStyle}"/>
                            <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Foreground" TargetName="Thumb" Value="{StaticResource MouseOverForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" 
                                             Placement="Left" Visibility="Collapsed" Width="4"/>
                                    <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" 
                                             Placement="Right" Visibility="Collapsed" Width="4"/>
                                    <Border x:Name="TrackBackground" BorderBrush="{StaticResource BorderBrush}" 
                                            BorderThickness="1" Background="{StaticResource BorderBrush}" Grid.Column="1" 
                                            CornerRadius="1" HorizontalAlignment="center" Margin="0,5" Width="2">
                                        <Canvas Margin="-1,-6">
                                            <Rectangle x:Name="PART_SelectionRange" Fill="{StaticResource BackgroundBrush}" 
                                                       Stroke="{StaticResource BorderBrush}" StrokeThickness="1.0" 
                                                       Visibility="Hidden" Width="4.0"/>
                                        </Canvas>
                                    </Border>
                                    <Track x:Name="PART_Track" Grid.Column="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb" Style="{StaticResource VerticalSliderThumbStyle}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement" Value="TopLeft">
                                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                    <Setter Property="Style" TargetName="Thumb" Value="{StaticResource VerticalSliderLeftThumbStyle}"/>
                                    <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="BottomRight">
                                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                    <Setter Property="Style" TargetName="Thumb" Value="{StaticResource VerticalSliderRightThumbStyle}"/>
                                    <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="Both">
                                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="Foreground" TargetName="Thumb" Value="{StaticResource MouseOverForegroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--SCROLLBAR-->
    <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>

    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" 
                                         RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true" 
                                         Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" 
                               Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" 
                                         RenderPressed="{TemplateBinding IsDragging}" SnapsToDevicePixels="true" 
                                         Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" 
                               Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" Background="Transparent" SnapsToDevicePixels="true" Width="{TemplateBinding Width}" MinWidth="{TemplateBinding MinWidth}">
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Setter Property="MinWidth" Value="0"/>
                            <Setter Property="Width" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Rectangle Fill="{DynamicResource ScrollTrackerBrush}" Margin="5" 
                                   Stroke="Black" RadiusX="4" RadiusY="4" StrokeThickness="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--SCROLLVIEWER-->
    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="Transparent" Grid.Row="1"/>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" 
                                                CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" Style="{DynamicResource ScrollBarStyle}" 
                                   AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" 
                                   Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" 
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                   ViewportSize="{TemplateBinding ViewportHeight}" Background="Transparent"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Style="{DynamicResource ScrollBarStyle}" 
                                   AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" 
                                   Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" 
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                   ViewportSize="{TemplateBinding ViewportWidth}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TABCONTROL-->
    <Style TargetType="{x:Type TextBlock}" x:Key="TabHeaderTextBlockStyle">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5,3,5,3"/>
        <Setter Property="FontFamily" Value="{DynamicResource TabHeaderFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource TabHeaderFontSize}"/>
        <Setter Property="FontWeight" Value="{DynamicResource TabHeaderFontWeight}"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Padding" Value="4,4,4,4"/>
        <Setter Property="BorderThickness" Value="2,2,2,2"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Margin="5,2,5,0" 
                                  Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5,5,5,5" 
                                BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" 
                                KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" 
                                              Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="Background" Value="{StaticResource TabItemBrush}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TabItem}">
                                        <Grid VerticalAlignment="Bottom" Margin="1,0,1,0">
                                            <Border Name="Border" Background="{TemplateBinding Background}" CornerRadius="5,5,0,0" 
                                                    BorderBrush="{StaticResource BorderBrush}" Margin="0,0,0,-2" 
                                                    BorderThickness="2,2,2,2" SnapsToDevicePixels="True"/>
                                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" 
                                                              HorizontalAlignment="Center" ContentSource="Header" 
                                                              Margin="2" RecognizesAccessKey="True"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <!--<Trigger Property="IsMouseOver">
                                                <Setter Property="Cursor" Value="{DynamicResource MouseOverCursor}"/>
                                            </Trigger>-->
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
                                                <Setter Property="BorderThickness" TargetName="Border" Value="2,2,2,0"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <ContentPresenter>
                                            <ContentPresenter.Content>
                                                <TextBlock Style="{DynamicResource TabHeaderTextBlockStyle}" Text="{TemplateBinding Content}"/>
                                            </ContentPresenter.Content>
                                        </ContentPresenter>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--LISTVIEW-->
    <Style TargetType="{x:Type ListView}" x:Key="ListViewStyle">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    </Style>

    <!--TREEVIEW-->
    <Style x:Key="TreeViewStyle" TargetType="TreeView">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="_tv_scrollviewer_" Style="{DynamicResource ScrollViewerStyle}" 
                                      Background="{TemplateBinding Background}" CanContentScroll="false" Focusable="false" 
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" 
                                      Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                            <Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DATEPICKER-->
    <Style x:Key="DatePickerWithoutWatermarkStyle" TargetType="{x:Type DatePicker}">
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="IsTodayHighlighted" Value="True"/>
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal"/>
                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.Resources>
                                <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>
                                <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                    <Grid>
                                        <vsm:VisualStateManager.VisualStateGroups>
                                            <vsm:VisualStateGroup x:Name="CommonStates">
                                                <vsm:VisualStateGroup.Transitions>
                                                    <vsm:VisualTransition GeneratedDuration="0"/>
                                                    <vsm:VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                    <vsm:VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                </vsm:VisualStateGroup.Transitions>
                                                <vsm:VisualState x:Name="Normal"/>
                                                <vsm:VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimation Duration="0" To="#FF448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </vsm:VisualState>
                                                <vsm:VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </vsm:VisualState>
                                                <vsm:VisualState x:Name="Disabled"/>
                                            </vsm:VisualStateGroup>
                                        </vsm:VisualStateManager.VisualStateGroups>
                                        <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="18" Margin="0" VerticalAlignment="Center" Width="19">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="23*"/>
                                                <RowDefinition Height="19*"/>
                                                <RowDefinition Height="19*"/>
                                                <RowDefinition Height="19*"/>
                                            </Grid.RowDefinitions>
                                            <Border x:Name="Highlight" BorderBrush="#FF45D6FA" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,1,1" Margin="-1" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                            <Border x:Name="Background" BorderBrush="#FFFFFFFF" BorderThickness="1" Background="#FF1F3B53" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3"/>
                                            <Border x:Name="BackgroundGradient" BorderBrush="#BF000000" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                        <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                        <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                        <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                        <GradientStop Color="#FF4084BD"/>
                                                        <GradientStop Color="#FFAFCFEA" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                                <Rectangle.Stroke>
                                                    <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                        <GradientStop Color="#FF494949"/>
                                                        <GradientStop Color="#FF9F9F9F" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Stroke>
                                            </Rectangle>
                                            <Path Grid.ColumnSpan="4" Grid.Column="0" Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z" Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="4,3,4,3" Grid.Row="1" Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center"/>
                                            <Ellipse Grid.ColumnSpan="4" Fill="#FFFFFFFF" HorizontalAlignment="Center" Height="3" StrokeThickness="0" VerticalAlignment="Center" Width="3"/>
                                            <Border x:Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Left" Margin="3,0,3,0" Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Top" Width="20"/>
                            <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" Focusable="{TemplateBinding Focusable}" HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Stretch" Style="{DynamicResource DatePickerTextBoxStyle}"/>
                            <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Fill="#A5FFFFFF" RadiusY="1" Grid.Row="0" RadiusX="1"/>
                                <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="18" Margin="3,0,3,0" RadiusY="1" Grid.Row="0" RadiusX="1" Width="19"/>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                            <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DatePickerTextBoxStyle" TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                    <Grid>
                        <Grid.Resources>
                            <SolidColorBrush x:Key="WatermarkBrush" Color="#FFAAAAAA"/>
                        </Grid.Resources>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="0"/>
                                    <vsm:VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="Normal"/>
                                <vsm:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="ContentElement"/>
                                        <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="watermark_decorator"/>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="WatermarkStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="0"/>
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="Unwatermarked"/>
                                <vsm:VisualState x:Name="Watermarked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="FocusStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="0"/>
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="Unfocused"/>
                                <vsm:VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1" Padding="{TemplateBinding Padding}">
                            <Grid x:Name="WatermarkContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Border x:Name="ContentElement" BorderBrush="#FFFFFFFF" BorderThickness="1"/>
                                <Border x:Name="watermark_decorator" BorderBrush="#FFFFFFFF" BorderThickness="1">
                                    <ContentControl x:Name="PART_Watermark" Visibility="Collapsed" Focusable="False" IsHitTestVisible="False" Opacity="0" Padding="2"/>
                                </Border>
                                <ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Border x:Name="FocusVisual" BorderBrush="#FF45D6FA" CornerRadius="1" IsHitTestVisible="False" Opacity="0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>